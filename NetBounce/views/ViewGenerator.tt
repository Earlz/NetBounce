<#@ template language="C#" hostspecific="true" #>
<#@ output extension="cs" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>

<#
/*
Copyright (c) 2010 - 2012 Jordan "Earlz/hckr83" Earls  <http://lastyearswishes.com>
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.
2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in the
   documentation and/or other materials provided with the distribution.
3. The name of the author may not be used to endorse or promote products
   derived from this software without specific prior written permission.
   
THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#>

<#
/*TEMPLATE OPTIONS*/

    //What files to process as views. Use the | symbol to match multiple filetypes
    string SearchPattern="*.html"; 
    
    //The path relative to THIS file to look for View files (you almost always just want "" here)
    string TemplateDirectory=""; 
    
    //If your views require using statements, put them here.
    //A few essential namespaces are automatically included already
    string CustomUsing=@"
        //custom using statements for your views go here:
        
    ";

/*CONFIGURATION DEFAULTS*/
var defaults=new ViewConfiguration
{
		/// <summary>
		/// Controls whether an interface as well as an implementing class will be generated
		/// This can be overrridden 
		/// </summary>
		AutoInterfaces=false,
		/// <summary>
		/// The default namespace to use for the generated view class
		/// this can be overridden
		/// </summary>
		DefaultNamespace="Earlz.LucidMVC.MyViews",
		/// <summary>
		/// Controls whether the view is rendered directly to the DefaultWriter or if it is first built-up into a string
		/// Performance comparisons between the two have not been conclusive thus far
		/// This can be overridden
		/// </summary>
		RenderDirectly=false,
		/// <summary>
		/// Will generate special code around `{= =}` blocks to catch null references and return empty string instead of throwing an exception
		/// This can have a significant performance impact for views with heavy loops
		/// This can be overridden
		/// </summary>
		DetectChainedNulls=false,
		/// <summary>
		/// The  base class for the generated view class. This can include interfaces by using commas
		/// Example: `MyBase, IFoo, IBar` 
		/// This can be overridden
		/// </summary>
		BaseClass="Earlz.LucidMVC.ViewEngine.LucidViewBase",
		/// <summary>
		/// Mark the generated view as a partial class
		/// </summary>
		UsePartials=false,
		/// <summary>
		/// Mark the generated view as being internal rather than public
		/// </summary>
		UseInternal=false,
};
    
    
#>

<#  
/*END CONFIGURATION -- Touch everything past here at your own risk!*/
/*If you change anything past this point, it'll be harder to update to a later version.*/    

 
    string p=Path.GetDirectoryName(Host.TemplateFile);
    
    WriteLine("/*Generated by the BSD Licensed LucidMVC ViewGenerator T4 file*/");
    WriteLine("using System.Text;");
    WriteLine("using System.Collections.Generic;");
    WriteLine("using System.Web;"); //optional-ish
    WriteLine("using System.IO;");
    WriteLine("using System;");
    WriteLine("using Earlz.LucidMVC.ViewEngine;");
    WriteLine("using Earlz.LucidMVC;");
    WriteLine(CustomUsing);
    
    string[] filters = SearchPattern.Split('|');
    foreach(string filter in filters )
    {
        var files = Directory.GetFiles(p+TemplateDirectory, filter, SearchOption.AllDirectories);
        foreach(var file in files){
        	string localname=Path.GetFileNameWithoutExtension(file);
            WriteLine("/*File: "+localname+" */");
            string name=Path.GetFileName(file);
            name=name.Substring(0,name.LastIndexOf(filter.Substring(1,filter.Length-1)));
            name=name.Replace(" ","_");
            var gen=new ViewGenerator(file,name,defaults);
            gen.Generate();
            WriteLine(gen.ToString());
            if(gen.GeneratedInterface!=null && gen.AutoInterfaces)
            {
            	WriteLine("/*AutoInterface for "+localname+"*/");
            	WriteLine(gen.GeneratedInterface.ToString());
            }
        }
    }
#>

<#@ include file="ViewEngineInternal.tt.cs" #>